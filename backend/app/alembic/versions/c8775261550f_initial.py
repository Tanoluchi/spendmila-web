"""Initial

Revision ID: c8775261550f
Revises: 
Create Date: 2025-05-06 20:32:10.313435

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'c8775261550f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('category_type', sa.Enum('INCOME', 'EXPENSE', name='categorytype'), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_category_type'), 'category', ['category_type'], unique=False)
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=False)
    op.create_table('currency',
    sa.Column('code', sa.Enum('USD', 'EUR', 'ARS', name='currencycode'), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_currency_code'), 'currency', ['code'], unique=True)
    op.create_index(op.f('ix_currency_id'), 'currency', ['id'], unique=False)
    op.create_index(op.f('ix_currency_name'), 'currency', ['name'], unique=False)
    op.create_table('payment_method',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('payment_method_type', sa.Enum('CASH', 'TRANSFER', 'CARD', 'OTHER', name='paymentmethodtype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_method_id'), 'payment_method', ['id'], unique=False)
    op.create_index(op.f('ix_payment_method_name'), 'payment_method', ['name'], unique=True)
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('subscription_type', sa.Enum('FREE', 'BASIC', 'PRO', name='subscriptiontype'), nullable=False),
    sa.Column('default_currency_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['default_currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('account',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('account_type', sa.Enum('BANK', 'DIGITAL', 'CASH', 'CREDIT', 'INVESTMENT', 'SAVINGS', 'CHECKING', 'OTHER', name='accounttype'), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('institution', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('currency_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_account_account_type'), 'account', ['account_type'], unique=False)
    op.create_index(op.f('ix_account_currency_id'), 'account', ['currency_id'], unique=False)
    op.create_index(op.f('ix_account_id'), 'account', ['id'], unique=False)
    op.create_index(op.f('ix_account_name'), 'account', ['name'], unique=False)
    op.create_index(op.f('ix_account_user_id'), 'account', ['user_id'], unique=False)
    op.create_table('budget',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budget_category_id'), 'budget', ['category_id'], unique=False)
    op.create_index(op.f('ix_budget_id'), 'budget', ['id'], unique=False)
    op.create_index(op.f('ix_budget_name'), 'budget', ['name'], unique=False)
    op.create_index(op.f('ix_budget_user_id'), 'budget', ['user_id'], unique=False)
    op.create_table('financial_goal',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('target_amount', sa.Float(), nullable=False),
    sa.Column('current_amount', sa.Float(), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'PAUSED', 'CANCELLED', 'IN_PROGRESS', name='financialgoalstatus'), nullable=False),
    sa.Column('goal_type', sa.Enum('SAVINGS', 'INVESTMENT', 'DEBT_PAYMENT', 'EMERGENCY_FUND', 'RETIREMENT', 'EDUCATION', 'TRAVEL', 'HOME', 'OTHER', name='financialgoaltype'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_goal_deadline'), 'financial_goal', ['deadline'], unique=False)
    op.create_index(op.f('ix_financial_goal_goal_type'), 'financial_goal', ['goal_type'], unique=False)
    op.create_index(op.f('ix_financial_goal_id'), 'financial_goal', ['id'], unique=False)
    op.create_index(op.f('ix_financial_goal_name'), 'financial_goal', ['name'], unique=False)
    op.create_index(op.f('ix_financial_goal_status'), 'financial_goal', ['status'], unique=False)
    op.create_index(op.f('ix_financial_goal_user_id'), 'financial_goal', ['user_id'], unique=False)
    op.create_table('debt',
    sa.Column('creditor_name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('debt_type', sa.Enum('PERSONAL', 'CREDIT_CARD', 'MORTGAGE', 'AUTO', 'STUDENT', 'BUSINESS', 'MEDICAL', 'OTHER', name='debttype'), nullable=False),
    sa.Column('interest_rate', sa.Float(), nullable=True),
    sa.Column('minimum_payment', sa.Float(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('paid_amount', sa.Float(), nullable=False),
    sa.Column('remaining_amount', sa.Float(), nullable=False),
    sa.Column('payment_progress', sa.Float(), nullable=False),
    sa.Column('is_installment', sa.Boolean(), nullable=False),
    sa.Column('total_installments', sa.Integer(), nullable=True),
    sa.Column('paid_installments', sa.Integer(), nullable=True),
    sa.Column('remaining_installments', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('currency_id', sa.Uuid(), nullable=False),
    sa.Column('account_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debt_account_id'), 'debt', ['account_id'], unique=False)
    op.create_index(op.f('ix_debt_creditor_name'), 'debt', ['creditor_name'], unique=False)
    op.create_index(op.f('ix_debt_currency_id'), 'debt', ['currency_id'], unique=False)
    op.create_index(op.f('ix_debt_debt_type'), 'debt', ['debt_type'], unique=False)
    op.create_index(op.f('ix_debt_due_date'), 'debt', ['due_date'], unique=False)
    op.create_index(op.f('ix_debt_id'), 'debt', ['id'], unique=False)
    op.create_index(op.f('ix_debt_is_installment'), 'debt', ['is_installment'], unique=False)
    op.create_index(op.f('ix_debt_is_paid'), 'debt', ['is_paid'], unique=False)
    op.create_index(op.f('ix_debt_user_id'), 'debt', ['user_id'], unique=False)
    op.create_table('subscription',
    sa.Column('service_name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'YEARLY', 'QUARTERLY', name='subscriptionfrequency'), nullable=False),
    sa.Column('next_payment_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CANCELLED', 'PAUSED', 'EXPIRED', 'PENDING_RENEWAL', name='subscriptionstatus'), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('reminder_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('currency_id', sa.Uuid(), nullable=False),
    sa.Column('account_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_account_id'), 'subscription', ['account_id'], unique=False)
    op.create_index(op.f('ix_subscription_currency_id'), 'subscription', ['currency_id'], unique=False)
    op.create_index(op.f('ix_subscription_frequency'), 'subscription', ['frequency'], unique=False)
    op.create_index(op.f('ix_subscription_id'), 'subscription', ['id'], unique=False)
    op.create_index(op.f('ix_subscription_next_payment_date'), 'subscription', ['next_payment_date'], unique=False)
    op.create_index(op.f('ix_subscription_service_name'), 'subscription', ['service_name'], unique=False)
    op.create_index(op.f('ix_subscription_status'), 'subscription', ['status'], unique=False)
    op.create_index(op.f('ix_subscription_user_id'), 'subscription', ['user_id'], unique=False)
    op.create_table('transaction',
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.Column('payment_method_id', sa.Uuid(), nullable=False),
    sa.Column('currency_id', sa.Uuid(), nullable=False),
    sa.Column('account_id', sa.Uuid(), nullable=True),
    sa.Column('subscription_id', sa.Uuid(), nullable=True),
    sa.Column('financial_goal_id', sa.Uuid(), nullable=True),
    sa.Column('debt_id', sa.Uuid(), nullable=True),
    sa.Column('transaction_type', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['debt_id'], ['debt.id'], ),
    sa.ForeignKeyConstraint(['financial_goal_id'], ['financial_goal.id'], ),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_method.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_account_id'), 'transaction', ['account_id'], unique=False)
    op.create_index(op.f('ix_transaction_category_id'), 'transaction', ['category_id'], unique=False)
    op.create_index(op.f('ix_transaction_currency_id'), 'transaction', ['currency_id'], unique=False)
    op.create_index(op.f('ix_transaction_date'), 'transaction', ['date'], unique=False)
    op.create_index(op.f('ix_transaction_debt_id'), 'transaction', ['debt_id'], unique=False)
    op.create_index(op.f('ix_transaction_financial_goal_id'), 'transaction', ['financial_goal_id'], unique=False)
    op.create_index(op.f('ix_transaction_id'), 'transaction', ['id'], unique=False)
    op.create_index(op.f('ix_transaction_payment_method_id'), 'transaction', ['payment_method_id'], unique=False)
    op.create_index(op.f('ix_transaction_subscription_id'), 'transaction', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_transaction_transaction_type'), 'transaction', ['transaction_type'], unique=False)
    op.create_index(op.f('ix_transaction_user_id'), 'transaction', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_user_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_transaction_type'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_subscription_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_payment_method_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_financial_goal_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_debt_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_date'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_currency_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_category_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_account_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_subscription_user_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_status'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_service_name'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_next_payment_date'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_frequency'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_currency_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_account_id'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_index(op.f('ix_debt_user_id'), table_name='debt')
    op.drop_index(op.f('ix_debt_is_paid'), table_name='debt')
    op.drop_index(op.f('ix_debt_is_installment'), table_name='debt')
    op.drop_index(op.f('ix_debt_id'), table_name='debt')
    op.drop_index(op.f('ix_debt_due_date'), table_name='debt')
    op.drop_index(op.f('ix_debt_debt_type'), table_name='debt')
    op.drop_index(op.f('ix_debt_currency_id'), table_name='debt')
    op.drop_index(op.f('ix_debt_creditor_name'), table_name='debt')
    op.drop_index(op.f('ix_debt_account_id'), table_name='debt')
    op.drop_table('debt')
    op.drop_index(op.f('ix_financial_goal_user_id'), table_name='financial_goal')
    op.drop_index(op.f('ix_financial_goal_status'), table_name='financial_goal')
    op.drop_index(op.f('ix_financial_goal_name'), table_name='financial_goal')
    op.drop_index(op.f('ix_financial_goal_id'), table_name='financial_goal')
    op.drop_index(op.f('ix_financial_goal_goal_type'), table_name='financial_goal')
    op.drop_index(op.f('ix_financial_goal_deadline'), table_name='financial_goal')
    op.drop_table('financial_goal')
    op.drop_index(op.f('ix_budget_user_id'), table_name='budget')
    op.drop_index(op.f('ix_budget_name'), table_name='budget')
    op.drop_index(op.f('ix_budget_id'), table_name='budget')
    op.drop_index(op.f('ix_budget_category_id'), table_name='budget')
    op.drop_table('budget')
    op.drop_index(op.f('ix_account_user_id'), table_name='account')
    op.drop_index(op.f('ix_account_name'), table_name='account')
    op.drop_index(op.f('ix_account_id'), table_name='account')
    op.drop_index(op.f('ix_account_currency_id'), table_name='account')
    op.drop_index(op.f('ix_account_account_type'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_payment_method_name'), table_name='payment_method')
    op.drop_index(op.f('ix_payment_method_id'), table_name='payment_method')
    op.drop_table('payment_method')
    op.drop_index(op.f('ix_currency_name'), table_name='currency')
    op.drop_index(op.f('ix_currency_id'), table_name='currency')
    op.drop_index(op.f('ix_currency_code'), table_name='currency')
    op.drop_table('currency')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_index(op.f('ix_category_category_type'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
