/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as LayoutImport } from './routes/_layout'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as DashboardTransactionsImport } from './routes/dashboard/transactions'
import { Route as DashboardSubscriptionsImport } from './routes/dashboard/subscriptions'
import { Route as DashboardSettingsImport } from './routes/dashboard/settings'
import { Route as DashboardImportImport } from './routes/dashboard/import'
import { Route as DashboardHelpImport } from './routes/dashboard/help'
import { Route as DashboardGoalsImport } from './routes/dashboard/goals'
import { Route as DashboardExportImport } from './routes/dashboard/export'
import { Route as DashboardDebtsImport } from './routes/dashboard/debts'
import { Route as DashboardChartsImport } from './routes/dashboard/charts'
import { Route as DashboardBudgetsImport } from './routes/dashboard/budgets'
import { Route as DashboardAccountsImport } from './routes/dashboard/accounts'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutAdminImport } from './routes/_layout/admin'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const DashboardTransactionsRoute = DashboardTransactionsImport.update({
  path: '/transactions',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSubscriptionsRoute = DashboardSubscriptionsImport.update({
  path: '/subscriptions',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardImportRoute = DashboardImportImport.update({
  path: '/import',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardHelpRoute = DashboardHelpImport.update({
  path: '/help',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGoalsRoute = DashboardGoalsImport.update({
  path: '/goals',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardExportRoute = DashboardExportImport.update({
  path: '/export',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDebtsRoute = DashboardDebtsImport.update({
  path: '/debts',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardChartsRoute = DashboardChartsImport.update({
  path: '/charts',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBudgetsRoute = DashboardBudgetsImport.update({
  path: '/budgets',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAccountsRoute = DashboardAccountsImport.update({
  path: '/accounts',
  getParentRoute: () => DashboardRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/dashboard/accounts': {
      preLoaderRoute: typeof DashboardAccountsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/budgets': {
      preLoaderRoute: typeof DashboardBudgetsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/charts': {
      preLoaderRoute: typeof DashboardChartsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/debts': {
      preLoaderRoute: typeof DashboardDebtsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/export': {
      preLoaderRoute: typeof DashboardExportImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/goals': {
      preLoaderRoute: typeof DashboardGoalsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/help': {
      preLoaderRoute: typeof DashboardHelpImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/import': {
      preLoaderRoute: typeof DashboardImportImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/settings': {
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/subscriptions': {
      preLoaderRoute: typeof DashboardSubscriptionsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/transactions': {
      preLoaderRoute: typeof DashboardTransactionsImport
      parentRoute: typeof DashboardImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
  ]),
  DashboardRoute.addChildren([
    DashboardAccountsRoute,
    DashboardBudgetsRoute,
    DashboardChartsRoute,
    DashboardDebtsRoute,
    DashboardExportRoute,
    DashboardGoalsRoute,
    DashboardHelpRoute,
    DashboardImportRoute,
    DashboardSettingsRoute,
    DashboardSubscriptionsRoute,
    DashboardTransactionsRoute,
    DashboardIndexRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
